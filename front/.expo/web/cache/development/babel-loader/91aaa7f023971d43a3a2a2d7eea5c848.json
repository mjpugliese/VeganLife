{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/equipo/Escritorio/VeganLife/front/src/screens/SingleCategoryScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SingleCategory from \"../components/SingleCategory\";\nimport axios from 'axios';\nimport IP from \"../../env\";\n\nvar SingleCategoryScreen = function SingleCategoryScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipes = _useState2[0],\n      setRecipes = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  useEffect(function () {\n    axios.get(\"http://\" + IP + \":1337/api/recipes\").then(function (res) {\n      return res.data;\n    }).then(function (data) {\n      setRecipes(data.filter(function (el) {\n        return el.category._id == route.params.categoryId;\n      }));\n      data.filter(function (el) {\n        el.category._id == route.params.categoryId ? setCategory([el.category.image]) : null;\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, React.createElement(SingleCategory, {\n    recipes: recipes,\n    categoryImage: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default SingleCategoryScreen;","map":{"version":3,"sources":["/home/equipo/Escritorio/VeganLife/front/src/screens/SingleCategoryScreen.js"],"names":["React","useState","useEffect","SingleCategory","axios","IP","SingleCategoryScreen","navigation","route","recipes","setRecipes","category","setCategory","get","then","res","data","filter","el","_id","params","categoryId","image","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,OAAOC,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAC1BP,QAAQ,CAAC,EAAD,CADkB;AAAA;AAAA,MACjDQ,OADiD;AAAA,MACxCC,UADwC;;AAAA,mBAExBT,QAAQ,CAAC,EAAD,CAFgB;AAAA;AAAA,MAEjDU,QAFiD;AAAA,MAEvCC,WAFuC;;AAIxDV,EAAAA,SAAS,CAAC,YAAK;AACbE,IAAAA,KAAK,CAACS,GAAN,aAAoBR,EAApB,wBACMS,IADN,CACW,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAR;AAAA,KADd,EAEMF,IAFN,CAEW,UAAAE,IAAI,EAAG;AACVN,MAAAA,UAAU,CAACM,IAAI,CAACC,MAAL,CAAY,UAAAC,EAAE;AAAA,eAAGA,EAAE,CAACP,QAAH,CAAYQ,GAAZ,IAAmBX,KAAK,CAACY,MAAN,CAAaC,UAAnC;AAAA,OAAd,CAAD,CAAV;AACAL,MAAAA,IAAI,CAACC,MAAL,CAAY,UAAAC,EAAE,EAAE;AACbA,QAAAA,EAAE,CAACP,QAAH,CAAYQ,GAAZ,IAAmBX,KAAK,CAACY,MAAN,CAAaC,UAAhC,GAA4CT,WAAW,CAAC,CAACM,EAAE,CAACP,QAAH,CAAYW,KAAb,CAAD,CAAvD,GAA8E,IAA9E;AACD,OAFF;AAGE,KAPV,EAQMC,KARN,CAQY,UAAAC,GAAG;AAAA,aAAGC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAH;AAAA,KARf;AASD,GAVQ,EAUP,EAVO,CAAT;AAYE,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEf,OAAzB;AAAkC,IAAA,aAAa,EAAEE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD;AAKD,CArBD;;AAuBA,eAAeL,oBAAf","sourcesContent":["import React,{ useState, useEffect} from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport SingleCategory from '../components/SingleCategory'\nimport axios from 'axios'\nimport IP from '../../env'\n\nconst SingleCategoryScreen = ({ navigation, route }) => {\nconst [recipes, setRecipes] = useState([])\nconst [category, setCategory] = useState(\"\")\n\nuseEffect(() =>{\n  axios.get(`http://${IP}:1337/api/recipes`)\n       .then(res => res.data)\n       .then(data =>{\n          setRecipes(data.filter(el=> el.category._id == route.params.categoryId))\n          data.filter(el=>{\n             el.category._id == route.params.categoryId? setCategory([el.category.image]): null\n           })\n           })\n       .catch(err=> console.log(err))\n},[])\n\n  return (\n   <View>\n   <SingleCategory recipes={recipes} categoryImage={category}/>\n   </View>\n  )\n}\n\nexport default SingleCategoryScreen\n"]},"metadata":{},"sourceType":"module"}