{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/equipo/Escritorio/VeganLife/front/src/screens/RegisterScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport firebase from \"../utils/Firebase\";\nimport \"firebase/auth\";\nimport API from \"../api/api\";\nimport useInputs from \"../hooks/useInputs\";\nimport Logo from \"../components/Logo\";\nimport InputData from \"../components/InputData\";\nimport AccessButtons from \"../components/AccessButtons\";\nimport styles from \"../styles/login-register\";\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useInputs = useInputs(),\n      _useInputs2 = _slicedToArray(_useInputs, 2),\n      inputs = _useInputs2[0],\n      handleChange = _useInputs2[1];\n\n  var name = inputs.name,\n      email = inputs.email,\n      password = inputs.password;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name.length > 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!(email.length > 0)) {\n              _context.next = 10;\n              break;\n            }\n\n            if (!(password.length > 6)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n              return API.post(\"/users\", {\n                name: name,\n                email: email\n              });\n            }).then(function () {\n              return navigation.navigate(\"Login\");\n            }).catch(function (err) {\n              if (String(err).includes(\"badly formatted\")) setError(\"El email es inválido\");else if (String(err).includes(\"another account\")) setError(\"El email ya se encuentra registrado\");else console.log(err);\n            }));\n\n          case 5:\n            _context.next = 8;\n            break;\n\n          case 7:\n            setError(\"La contraseña debe tener al menos 7 caracteres\");\n\n          case 8:\n            _context.next = 11;\n            break;\n\n          case 10:\n            setError(\"Por favor, ingrese su email\");\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            setError(\"Por favor, ingrese su nombre\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    return setError(\"\");\n  }, [email, password, name]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Logo, {\n    text: \"Crear cuenta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(InputData, {\n    title: \"Nombre\",\n    handleChange: handleChange(\"name\"),\n    text: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(InputData, {\n    title: \"Correo\",\n    handleChange: handleChange(\"email\"),\n    text: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(InputData, {\n    title: \"Password\",\n    handleChange: handleChange(\"password\"),\n    text: password,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, errorMessage), React.createElement(AccessButtons, {\n    onPressBtn: handleSubmit,\n    textBtn: \"Registrarse\",\n    question: \"\\xBFYa tienes cuenta?\",\n    onPressInvitation: function onPressInvitation() {\n      return navigation.navigate(\"Login\");\n    },\n    invitation: \"Inicia Sesi\\xF3n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/equipo/Escritorio/VeganLife/front/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","firebase","API","useInputs","Logo","InputData","AccessButtons","styles","Register","navigation","inputs","handleChange","name","email","password","errorMessage","setError","handleSubmit","length","auth","createUserWithEmailAndPassword","then","post","navigate","catch","err","String","includes","console","log","Keyboard","dismiss","container","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, TouchableWithoutFeedback, Keyboard } from \"react-native\";\n//Firebase\nimport firebase from \"../utils/Firebase\";\nimport \"firebase/auth\";\n//API\nimport API from \"../api/api\";\n\n//hook\nimport useInputs from \"../hooks/useInputs\";\n\n//Components\nimport Logo from \"../components/Logo\";\nimport InputData from \"../components/InputData\";\nimport AccessButtons from \"../components/AccessButtons\";\n\n//Style\nimport styles from \"../styles/login-register\";\n\nconst Register = ({ navigation }) => {\n  const [inputs, handleChange] = useInputs();\n  const { name, email, password } = inputs;\n  const [errorMessage, setError] = useState(\"\");\n\n  const handleSubmit = async () => {\n    if (name.length > 0) {\n      if (email.length > 0) {\n        if (password.length > 6) {\n          await firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(() => API.post(\"/users\", { name, email }))\n            .then(() => navigation.navigate(\"Login\"))\n            .catch((err) => {\n              if (String(err).includes(\"badly formatted\"))\n                setError(\"El email es inválido\");\n              else if (String(err).includes(\"another account\"))\n                setError(\"El email ya se encuentra registrado\");\n              else console.log(err);\n            });\n        } else setError(\"La contraseña debe tener al menos 7 caracteres\");\n      } else setError(\"Por favor, ingrese su email\");\n    } else setError(\"Por favor, ingrese su nombre\");\n  };\n\n  useEffect(() => setError(\"\"), [email, password, name]);\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <Logo text=\"Crear cuenta\" />\n        <InputData\n          title=\"Nombre\"\n          handleChange={handleChange(\"name\")}\n          text={name}\n        />\n        <InputData\n          title=\"Correo\"\n          handleChange={handleChange(\"email\")}\n          text={email}\n        />\n        <InputData\n          title=\"Password\"\n          handleChange={handleChange(\"password\")}\n          text={password}\n          secureTextEntry={true}\n        />\n        <Text style={styles.alert}>{errorMessage}</Text>\n        <AccessButtons\n          onPressBtn={handleSubmit}\n          textBtn=\"Registrarse\"\n          question=\"¿Ya tienes cuenta?\"\n          onPressInvitation={() => navigation.navigate(\"Login\")}\n          invitation=\"Inicia Sesión\"\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}