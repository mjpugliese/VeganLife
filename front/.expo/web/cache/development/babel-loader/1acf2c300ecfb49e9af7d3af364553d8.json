{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/equipo/Escritorio/VeganLife/front/src/screens/LoginScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport firebase from \"../utils/Firebase\";\nimport \"firebase/auth\";\nimport useInputs from \"../hooks/useInputs\";\nimport Logo from \"../components/Logo\";\nimport InputData from \"../components/InputData\";\nimport AccessButtons from \"../components/AccessButtons\";\nimport styles from \"../styles/login-register\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useInputs = useInputs(),\n      _useInputs2 = _slicedToArray(_useInputs, 2),\n      inputs = _useInputs2[0],\n      handleChange = _useInputs2[1];\n\n  var email = inputs.email,\n      password = inputs.password;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      return navigation.navigate(\"FeedRecetas\");\n    }).catch(function (err) {\n      if (String(err).includes(\"password is invalid\")) setError(\"La contraseña es invalida.\");else if (String(err).includes(\"no user record\")) setError(\"El usuario es inexistente.\");else if (String(err).includes(\"to many failed login attempts\")) setError(\"Demasiados intentos fallidos. Intente nuevamente en unos minutos.\");\n    });\n  };\n\n  useEffect(function () {\n    return setError(\"\");\n  }, [email, password]);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Logo, {\n    text: \"Iniciar Sesi\\xF3n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(InputData, {\n    title: \"Correo\",\n    handleChange: handleChange(\"email\"),\n    text: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(InputData, {\n    title: \"Password\",\n    handleChange: handleChange(\"password\"),\n    text: password,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, errorMessage), React.createElement(AccessButtons, {\n    onPressBtn: handleSubmit,\n    textBtn: \"Iniciar Sesi\\xF3n\",\n    question: \"\\xBFNo tienes cuenta?\",\n    onPressInvitation: function onPressInvitation() {\n      return navigation.navigate(\"Register\");\n    },\n    invitation: \"Registrate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/equipo/Escritorio/VeganLife/front/src/screens/LoginScreen.js"],"names":["React","useEffect","useState","firebase","useInputs","Logo","InputData","AccessButtons","styles","Login","navigation","inputs","handleChange","email","password","errorMessage","setError","handleSubmit","auth","signInWithEmailAndPassword","then","navigate","catch","err","String","includes","Keyboard","dismiss","container","line","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAGA,OAAOC,QAAP;AACA,OAAO,eAAP;AAGA,OAAOC,SAAP;AAGA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AAGA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,mBACDN,SAAS,EADR;AAAA;AAAA,MACzBO,MADyB;AAAA,MACjBC,YADiB;;AAAA,MAExBC,KAFwB,GAEJF,MAFI,CAExBE,KAFwB;AAAA,MAEjBC,QAFiB,GAEJH,MAFI,CAEjBG,QAFiB;;AAAA,kBAGCZ,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,MAGzBa,YAHyB;AAAA,MAGXC,QAHW;;AAKhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBd,IAAAA,QAAQ,CACLe,IADH,GAEGC,0BAFH,CAE8BN,KAF9B,EAEqCC,QAFrC,EAGGM,IAHH,CAGQ;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoB,aAApB,CAAN;AAAA,KAHR,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACd,UAAIC,MAAM,CAACD,GAAD,CAAN,CAAYE,QAAZ,CAAqB,qBAArB,CAAJ,EACET,QAAQ,CAAC,4BAAD,CAAR,CADF,KAEK,IAAIQ,MAAM,CAACD,GAAD,CAAN,CAAYE,QAAZ,CAAqB,gBAArB,CAAJ,EACHT,QAAQ,CAAC,4BAAD,CAAR,CADG,KAEA,IAAIQ,MAAM,CAACD,GAAD,CAAN,CAAYE,QAAZ,CAAqB,+BAArB,CAAJ,EACHT,QAAQ,CACN,mEADM,CAAR;AAGH,KAbH;AAcD,GAfD;;AAiBAf,EAAAA,SAAS,CAAC;AAAA,WAAMe,QAAQ,CAAC,EAAD,CAAd;AAAA,GAAD,EAAqB,CAACH,KAAD,EAAQC,QAAR,CAArB,CAAT;AAEA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMY,QAAQ,CAACC,OAAT,EAAN;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,YAAY,EAAEjB,YAAY,CAAC,OAAD,CAF5B;AAGE,IAAA,IAAI,EAAEC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,YAAY,EAAED,YAAY,CAAC,UAAD,CAF5B;AAGE,IAAA,IAAI,EAAEE,QAHR;AAIE,IAAA,eAAe,EAAE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACsB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Bf,YAA5B,CAdF,EAeE,oBAAC,aAAD;AACE,IAAA,UAAU,EAAEE,YADd;AAEE,IAAA,OAAO,EAAC,mBAFV;AAGE,IAAA,QAAQ,EAAC,uBAHX;AAIE,IAAA,iBAAiB,EAAE;AAAA,aAAMP,UAAU,CAACW,QAAX,CAAoB,UAApB,CAAN;AAAA,KAJrB;AAKE,IAAA,UAAU,EAAC,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF;AA2BD,CAnDD;;AAqDA,eAAeZ,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, TouchableWithoutFeedback, Keyboard } from \"react-native\";\n//Firebase\nimport firebase from \"../utils/Firebase\";\nimport \"firebase/auth\";\n\n//hook\nimport useInputs from \"../hooks/useInputs\";\n\n//Components\nimport Logo from \"../components/Logo\";\nimport InputData from \"../components/InputData\";\nimport AccessButtons from \"../components/AccessButtons\";\n\n//Style\nimport styles from \"../styles/login-register\";\n\nconst Login = ({ navigation }) => {\n  const [inputs, handleChange] = useInputs();\n  const { email, password } = inputs;\n  const [errorMessage, setError] = useState(\"\");\n\n  const handleSubmit = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => navigation.navigate(\"FeedRecetas\")) // res = {user}\n      .catch((err) => {\n        if (String(err).includes(\"password is invalid\"))\n          setError(\"La contraseña es invalida.\");\n        else if (String(err).includes(\"no user record\"))\n          setError(\"El usuario es inexistente.\");\n        else if (String(err).includes(\"to many failed login attempts\"))\n          setError(\n            \"Demasiados intentos fallidos. Intente nuevamente en unos minutos.\"\n          );\n      });\n  };\n\n  useEffect(() => setError(\"\"), [email, password]);\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <Logo text=\"Iniciar Sesión\" />\n        <View style={styles.line} />\n        <InputData\n          title=\"Correo\"\n          handleChange={handleChange(\"email\")}\n          text={email}\n        />\n        <InputData\n          title=\"Password\"\n          handleChange={handleChange(\"password\")}\n          text={password}\n          secureTextEntry={true}\n        />\n        <Text style={styles.alert}>{errorMessage}</Text>\n        <AccessButtons\n          onPressBtn={handleSubmit}\n          textBtn=\"Iniciar Sesión\"\n          question=\"¿No tienes cuenta?\"\n          onPressInvitation={() => navigation.navigate(\"Register\")}\n          invitation=\"Registrate\"\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default Login;\n\n// firebase.auth().onAuthStateChanged(user => {\n//     user ? navigation.navigate('Prueba') : console.log('Usuario no Logueado')\n// })\n"]},"metadata":{},"sourceType":"module"}